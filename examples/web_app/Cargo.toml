[package]
name = "wasm-app"
description = "Virus alarm game (simulation mode) in a web app!"
version = "0.1.0"
authors = ["raimundo saona <rasa200@gmail.com>"]
categories = ["wasm"]
readme = "README.md"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
virus_alarm = { path = "../..", features = ["wasm-bindgen"] }
wasm-bindgen = "0.2"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
ndarray = "0.14.0"
web-sys = { version = "0.3", features = ["console"] }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"
test-case = "1.1.0"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[package.metadata.wasm-pack.profile.release]
# Check out options in
# https://rustwasm.github.io/docs/book/reference/code-size.html#use-the-wasm-opt-tool
wasm-opt = ["-O3", "--enable-mutable-globals"]
